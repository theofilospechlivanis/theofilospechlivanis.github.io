---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
---

<script>
	const html = document.querySelector('html');

	function switchAuto() {
		html.style.setProperty("color-scheme", "light dark");
		sessionStorage.removeItem("mode");
		autoSwitch.setAttribute("aria-pressed","true");
		lightSwitch.setAttribute("aria-pressed","false");
		darkSwitch.setAttribute("aria-pressed","false");
	}

	function switchLight() {
		html.style.setProperty("color-scheme", "light");
		sessionStorage.setItem("mode", "light");
		autoSwitch.setAttribute("aria-pressed","false");
		lightSwitch.setAttribute("aria-pressed","true");
		darkSwitch.setAttribute("aria-pressed","false");
	}

	function switchDark() {
		html.style.setProperty("color-scheme", "dark");
		sessionStorage.setItem("mode", "dark");
		autoSwitch.setAttribute("aria-pressed","false");
		lightSwitch.setAttribute("aria-pressed","false");
		darkSwitch.setAttribute("aria-pressed","true");
	}

	document.addEventListener('DOMContentLoaded', () => {
		const mode = sessionStorage.getItem("mode");

		if (mode === "light") switchLight();
		if (mode === "dark") switchDark();
	});

	document.addEventListener('astro:after-swap', () => {
		const mode = sessionStorage.getItem("mode");

		if (mode === "light") switchLight();
		if (mode === "dark") switchDark();
	});

	document.addEventListener('astro:page-load', () => {
		const mode = sessionStorage.getItem("mode");

		if (mode === "light") switchLight();
		if (mode === "dark") switchDark();

		const autoSwitch = document.getElementById("autoSwitch");
		autoSwitch.addEventListener("click", (event) => {
			switchAuto();
		});

		const lightSwitch = document.getElementById("lightSwitch");
		lightSwitch.addEventListener("click", (event) => {
			switchLight();
		});

		const darkSwitch = document.getElementById("darkSwitch");
		darkSwitch.addEventListener("click", (event) => {
			switchDark();
		});
	});
</script>

<header>
	<nav>
		<h2><a href="/">{SITE_TITLE}</a></h2>

		<div class="links-wrapper">
			<div class="internal-links">
				<HeaderLink href="/">Home</HeaderLink>
				<HeaderLink href="/blog/page/1">Blog</HeaderLink>
				<HeaderLink href="/about">About</HeaderLink>
			</div>

			<div class="theme-buttons">
				<button id="autoSwitch" type="button">Auto</button>
				<button id="lightSwitch" type="button">Light</button>
				<button id="darkSwitch" type="button">Dark</button>
			</div>
		</div>

		<div class="social-links">
			<a href="https://github.com/theopechli" target="_blank">
				<span class="sr-only">Go to theopechli's GitHub profile</span>
				<svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32">
				  <path
						fill="currentColor"
						d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
					></path>
				</svg>
			</a>
		</div>
	</nav>
</header>

<style>
	header {
		margin: 0;
		padding: 0 1em;
		background: var(--bg-dim);
		box-shadow: 0 2px 8px color-mix(in srgb, var(--fg-main) 80%, transparent);
	}

	.links-wrapper {
		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 2em;
	}

	.internal-links {
		display: flex;
		flex-direction: row;
		gap: 0.6em;
	}

	.theme-buttons {
		display: flex;
		flex-direction: row;
		gap: 0.6em;
	}

	nav {
		padding: 1em 0.5em;
		display: flex;
		align-items: center;
		justify-content: space-around;
	}

	nav a {
		padding: 4px 12px;
		background:
			linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.13)),
			radial-gradient(90% 7% at 50% 8%, rgba(255, 255, 255, 0.47) 25%, rgba(255, 255, 255, 0) 50%),
			var(--bg-button-inactive);
		color: var(--fg-text-inactive);
		box-shadow: 0 2px 8px color-mix(in srgb, var(--fg-main) 90%, transparent);
		border: 2px solid transparent;
		border-radius: 0.4em;
		cursor: pointer;
		text-decoration: none;
		transition: 0.3s ease;
	}

	nav a:hover {
		color: var(--fg-text-active);
		background-color: var(--bg-hover);
		border-color: var(--border-inactive);
		transform: scale(0.98, 0.98);
	}

	nav a.active {
		color: var(--fg-text-active);
		background:
			linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.13)),
			radial-gradient(90% 7% at 50% 8%, rgba(255, 255, 255, 0.47) 25%, rgba(255, 255, 255, 0) 50%),
			var(--bg-button-active);
		transform: scale(0.9, 0.9);
	}

	.social-links,
	.social-links a {
		display: flex;
		gap: 0.6em;
	}

	.social-links a:hover {
		transform: scale(0.98, 0.98);
	}

	h2 {
		margin: 0;
		font-size: 1.25em;
	}

	h2 a,
	h2 a.active {
		text-decoration: none;
		color: var(--fg-text-active);
	}

	@media (max-width: 720px) {
		nav {
			flex-direction: column;
			gap: 1em;
		}

		.links-wrapper {
			flex-direction: column;
			gap: 1em;
		}
	}
</style>
